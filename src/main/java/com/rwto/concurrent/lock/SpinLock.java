package com.rwto.concurrent.lock;

/**
 * 自旋锁
 * 如果 线程被锁阻塞，会被切换到内核态挂起，如果获取到锁，又需要切换到内核态唤醒该线程，用户态切到内核态的开销比较大
 * 所以java 引入了自旋锁的概念，即：如果发现锁被占用，并不马上阻塞，而是多次尝试获取，尝试过程中可能就获取到了
 * 自旋锁是使用cpu的时间换取 线程阻塞和调度的开销
 * java 本身是有自旋功能的
 * 默认是尝试10次获取，可以使用-XX:PreBlockSpin 设置重试次数
 *
 * 自旋锁 就是 循环尝试获取锁
 * @author renmw
 * @create 2023/12/13 23:05
 **/
public class SpinLock {
}
